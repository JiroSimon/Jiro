# Singly Linked List Node
class SinglyNode:
    def __init__(self, data):
        self.data = data
        self.next = None

# Doubly Linked List Node
class DoublyNode:
    def __init__(self, data):
        self.data = data
        self.next = None
        self.prev = None

# Singly Linked List Functions
def insert_singly(head, data):
    new_node = SinglyNode(data)
    if not head:
        head = new_node
    else:
        temp = head
        while temp.next:
            temp = temp.next
        temp.next = new_node
    return head

def display_singly(head):
    while head:
        print(f"{head.data} -> ", end="")
        head = head.next
    print("None")

# Doubly Linked List Functions
def insert_doubly(head, data):
    new_node = DoublyNode(data)
    if not head:
        head = new_node
    else:
        temp = head
        while temp.next:
            temp = temp.next
        temp.next = new_node
        new_node.prev = temp
    return head

def display_doubly(head):
    while head:
        print(f"{head.data} <-> ", end="")
        head = head.next
    print("None")

# Circular Linked List Functions
def insert_circular(head, data):
    new_node = SinglyNode(data)
    if not head:
        head = new_node
        new_node.next = head  # Point to itself for circularity
    else:
        temp = head
        while temp.next != head:  # Traverse until you reach the head again
            temp = temp.next
        temp.next = new_node
        new_node.next = head  # Make the last node point to the head
    return head

def display_circular(head):
    if not head:
        return
    temp = head
    while True:
        print(f"{temp.data} -> ", end="")
        temp = temp.next
        if temp == head:  # Stop when you reach the head again
            break
    print(" (Back to Head)")

# Main function to test the code
if __name__ == "__main__":
    # Singly Linked List
    singly_head = None
    singly_head = insert_singly(singly_head, 10)
    singly_head = insert_singly(singly_head, 20)
    singly_head = insert_singly(singly_head, 30)
    print("Singly Linked List: ", end="")
    display_singly(singly_head)

    # Doubly Linked List
    doubly_head = None
    doubly_head = insert_doubly(doubly_head, 100)
    doubly_head = insert_doubly(doubly_head, 200)
    doubly_head = insert_doubly(doubly_head, 300)
    print("Doubly Linked List: ", end="")
    display_doubly(doubly_head)

    # Circular Linked List
    circular_head = None
    circular_head = insert_circular(circular_head, 1)
    circular_head = insert_circular(circular_head, 2)
    circular_head = insert_circular(circular_head, 3)
    print("Circular Linked List: ", end="")
    display_circular(circular_head)
